MODULE ExpertProperties;

REQUIRE Expert, Icon;

NAMESPACE Expert;

// properties
META defineRevProperty(prop, capt, type, container, width, grp)
    prop capt = DATA type (ExpertRev) CHARWIDTH width IN grp;
    
    prop capt (Expert e) = prop(OVERRIDE lastApprovedRev(e), lastRev(e)) MATERIALIZED IN grp;

    EXTEND FORM expert
        PROPERTIES(r) BACKGROUND RGB(212,212,255) IF (prop(r) OR prop(prevRev(r))) AND NOT prop(r) = prop(prevRev(r))
        READONLYIF readonly(r)
        prop
    ;

    DESIGN expert {
        container {
            MOVE PROPERTY(prop(r));
        }
    }
    EXTEND FORM experts
        PROPERTIES(e) READONLY prop
    ;

    copy(ExpertRev from, ExpertRev to) +{
        prop(to) <- prop(from);
    }
END

META defineRevProperty(prop, capt, type, container, width)
    @defineRevProperty(prop, capt, type, container, width, base){
    prop capt = DATA type (ExpertRev) CHARWIDTH width IN base;
    
    prop capt (Expert e) = prop(OVERRIDE lastApprovedRev(e), lastRev(e)) MATERIALIZED IN base;

    EXTEND FORM expert
        PROPERTIES(r) BACKGROUND RGB(212,212,255) IF (prop(r) OR prop(prevRev(r))) AND NOT prop(r) = prop(prevRev(r))
        READONLYIF readonly(r)
        prop
    ;

    DESIGN expert {
        container {
            MOVE PROPERTY(prop(r));
        }
    }
    EXTEND FORM experts
        PROPERTIES(e) READONLY prop
    ;

    copy(ExpertRev from, ExpertRev to) +{
        prop(to) <- prop(from);
    }
};
END

@defineRevProperty(name, 'ФИО', STRING[100], leftPane, 15, id){
    name 'ФИО' = DATA STRING[100] (ExpertRev) CHARWIDTH 15 IN id;
    
    name 'ФИО' (Expert e) = name(OVERRIDE lastApprovedRev(e), lastRev(e)) MATERIALIZED IN id;

    EXTEND FORM expert
        PROPERTIES(r) BACKGROUND RGB(212,212,255) IF (name(r) OR name(prevRev(r))) AND NOT name(r) = name(prevRev(r))
        READONLYIF readonly(r)
        name
    ;

    DESIGN expert {
        leftPane {
            MOVE PROPERTY(name(r));
        }
    }
    EXTEND FORM experts
        PROPERTIES(e) READONLY name
    ;

    copy(ExpertRev from, ExpertRev to) +{
        name(to) <- name(from);
    }
};

DESIGN expert {
    leftPane {
        NEW contactInfo {
            lines = 2;
            alignment = STRETCH;
        }
    }
}

@defineRevProperty(company, 'Компания', STRING[200], contactInfo, 20){
    @defineRevProperty(company, 'Компания', STRING[200], contactInfo, 20, base){
    company 'Компания' = DATA STRING[200] (ExpertRev) CHARWIDTH 20 IN base;
    
    company 'Компания' (Expert e) = company(OVERRIDE lastApprovedRev(e), lastRev(e)) MATERIALIZED IN base;

    EXTEND FORM expert
        PROPERTIES(r) BACKGROUND RGB(212,212,255) IF (company(r) OR company(prevRev(r))) AND NOT company(r) = company(prevRev(r))
        READONLYIF readonly(r)
        company
    ;

    DESIGN expert {
        contactInfo {
            MOVE PROPERTY(company(r));
        }
    }
    EXTEND FORM experts
        PROPERTIES(e) READONLY company
    ;

    copy(ExpertRev from, ExpertRev to) +{
        company(to) <- company(from);
    }
};
};
@defineRevProperty(address, 'Адрес', STRING[200], contactInfo, 20){
    @defineRevProperty(address, 'Адрес', STRING[200], contactInfo, 20, base){
    address 'Адрес' = DATA STRING[200] (ExpertRev) CHARWIDTH 20 IN base;
    
    address 'Адрес' (Expert e) = address(OVERRIDE lastApprovedRev(e), lastRev(e)) MATERIALIZED IN base;

    EXTEND FORM expert
        PROPERTIES(r) BACKGROUND RGB(212,212,255) IF (address(r) OR address(prevRev(r))) AND NOT address(r) = address(prevRev(r))
        READONLYIF readonly(r)
        address
    ;

    DESIGN expert {
        contactInfo {
            MOVE PROPERTY(address(r));
        }
    }
    EXTEND FORM experts
        PROPERTIES(e) READONLY address
    ;

    copy(ExpertRev from, ExpertRev to) +{
        address(to) <- address(from);
    }
};
};

@defineRevProperty(phone, 'Телефон', STRING[20], contactInfo, 15){
    @defineRevProperty(phone, 'Телефон', STRING[20], contactInfo, 15, base){
    phone 'Телефон' = DATA STRING[20] (ExpertRev) CHARWIDTH 15 IN base;
    
    phone 'Телефон' (Expert e) = phone(OVERRIDE lastApprovedRev(e), lastRev(e)) MATERIALIZED IN base;

    EXTEND FORM expert
        PROPERTIES(r) BACKGROUND RGB(212,212,255) IF (phone(r) OR phone(prevRev(r))) AND NOT phone(r) = phone(prevRev(r))
        READONLYIF readonly(r)
        phone
    ;

    DESIGN expert {
        contactInfo {
            MOVE PROPERTY(phone(r));
        }
    }
    EXTEND FORM experts
        PROPERTIES(e) READONLY phone
    ;

    copy(ExpertRev from, ExpertRev to) +{
        phone(to) <- phone(from);
    }
};
};
@defineRevProperty(extraPhone, 'Телефон (доп.)', STRING[20], contactInfo, 15){
    @defineRevProperty(extraPhone, 'Телефон (доп.)', STRING[20], contactInfo, 15, base){
    extraPhone 'Телефон (доп.)' = DATA STRING[20] (ExpertRev) CHARWIDTH 15 IN base;
    
    extraPhone 'Телефон (доп.)' (Expert e) = extraPhone(OVERRIDE lastApprovedRev(e), lastRev(e)) MATERIALIZED IN base;

    EXTEND FORM expert
        PROPERTIES(r) BACKGROUND RGB(212,212,255) IF (extraPhone(r) OR extraPhone(prevRev(r))) AND NOT extraPhone(r) = extraPhone(prevRev(r))
        READONLYIF readonly(r)
        extraPhone
    ;

    DESIGN expert {
        contactInfo {
            MOVE PROPERTY(extraPhone(r));
        }
    }
    EXTEND FORM experts
        PROPERTIES(e) READONLY extraPhone
    ;

    copy(ExpertRev from, ExpertRev to) +{
        extraPhone(to) <- extraPhone(from);
    }
};
};

DESIGN expert {
    PROPERTY(phone(r)) {
        pattern = '+375 99 999 99 99';
//        regexp = r'\+375 \d\d \d\d\d \d\d \d\d';
//        regexpMessage = 'Формат телефона должен быть +375 XX XXX XX XX';
    }
    PROPERTY(extraPhone(r)) {
        pattern = '+375 99 999 99 99';
//        regexp = r'\+375 \d\d \d\d\d \d\d \d\d';
//        regexpMessage = 'Формат телефона должен быть +375 XX XXX XX XX';
    }
}

@defineRevProperty(mail, 'Почта', STRING[60], contactInfo, 15){
    @defineRevProperty(mail, 'Почта', STRING[60], contactInfo, 15, base){
    mail 'Почта' = DATA STRING[60] (ExpertRev) CHARWIDTH 15 IN base;
    
    mail 'Почта' (Expert e) = mail(OVERRIDE lastApprovedRev(e), lastRev(e)) MATERIALIZED IN base;

    EXTEND FORM expert
        PROPERTIES(r) BACKGROUND RGB(212,212,255) IF (mail(r) OR mail(prevRev(r))) AND NOT mail(r) = mail(prevRev(r))
        READONLYIF readonly(r)
        mail
    ;

    DESIGN expert {
        contactInfo {
            MOVE PROPERTY(mail(r));
        }
    }
    EXTEND FORM experts
        PROPERTIES(e) READONLY mail
    ;

    copy(ExpertRev from, ExpertRev to) +{
        mail(to) <- mail(from);
    }
};
};

@defineRevProperty(linkedIn, 'LinkedIn', STRING, contactInfo, 25){
    @defineRevProperty(linkedIn, 'LinkedIn', STRING, contactInfo, 25, base){
    linkedIn 'LinkedIn' = DATA STRING (ExpertRev) CHARWIDTH 25 IN base;
    
    linkedIn 'LinkedIn' (Expert e) = linkedIn(OVERRIDE lastApprovedRev(e), lastRev(e)) MATERIALIZED IN base;

    EXTEND FORM expert
        PROPERTIES(r) BACKGROUND RGB(212,212,255) IF (linkedIn(r) OR linkedIn(prevRev(r))) AND NOT linkedIn(r) = linkedIn(prevRev(r))
        READONLYIF readonly(r)
        linkedIn
    ;

    DESIGN expert {
        contactInfo {
            MOVE PROPERTY(linkedIn(r));
        }
    }
    EXTEND FORM experts
        PROPERTIES(e) READONLY linkedIn
    ;

    copy(ExpertRev from, ExpertRev to) +{
        linkedIn(to) <- linkedIn(from);
    }
};
};

linkedInLink 'LinkedIn' (Expert e) = LINK (linkedIn(e));
EXTEND FORM experts
    PROPERTIES(e) READONLY linkedInLink
;
DESIGN experts {
    PROPERTY(linkedIn(e)) { hide = TRUE; }
}

DESIGN expert {
    leftPane { 
        NEW extraInfo {
            horizontal = TRUE; 
        }
    }
}
@defineRevProperty(birthday, 'Дата рождения', DATE, extraInfo, 9){
    @defineRevProperty(birthday, 'Дата рождения', DATE, extraInfo, 9, base){
    birthday 'Дата рождения' = DATA DATE (ExpertRev) CHARWIDTH 9 IN base;
    
    birthday 'Дата рождения' (Expert e) = birthday(OVERRIDE lastApprovedRev(e), lastRev(e)) MATERIALIZED IN base;

    EXTEND FORM expert
        PROPERTIES(r) BACKGROUND RGB(212,212,255) IF (birthday(r) OR birthday(prevRev(r))) AND NOT birthday(r) = birthday(prevRev(r))
        READONLYIF readonly(r)
        birthday
    ;

    DESIGN expert {
        extraInfo {
            MOVE PROPERTY(birthday(r));
        }
    }
    EXTEND FORM experts
        PROPERTIES(e) READONLY birthday
    ;

    copy(ExpertRev from, ExpertRev to) +{
        birthday(to) <- birthday(from);
    }
};
};
@defineRevProperty(experience, 'Опыт', DATE, extraInfo, 9){
    @defineRevProperty(experience, 'Опыт', DATE, extraInfo, 9, base){
    experience 'Опыт' = DATA DATE (ExpertRev) CHARWIDTH 9 IN base;
    
    experience 'Опыт' (Expert e) = experience(OVERRIDE lastApprovedRev(e), lastRev(e)) MATERIALIZED IN base;

    EXTEND FORM expert
        PROPERTIES(r) BACKGROUND RGB(212,212,255) IF (experience(r) OR experience(prevRev(r))) AND NOT experience(r) = experience(prevRev(r))
        READONLYIF readonly(r)
        experience
    ;

    DESIGN expert {
        extraInfo {
            MOVE PROPERTY(experience(r));
        }
    }
    EXTEND FORM experts
        PROPERTIES(e) READONLY experience
    ;

    copy(ExpertRev from, ExpertRev to) +{
        experience(to) <- experience(from);
    }
};
};

@defineRevProperty(individualEntrepreneur, 'Наличие ИП', BOOLEAN, extraInfo, 4){
    @defineRevProperty(individualEntrepreneur, 'Наличие ИП', BOOLEAN, extraInfo, 4, base){
    individualEntrepreneur 'Наличие ИП' = DATA BOOLEAN (ExpertRev) CHARWIDTH 4 IN base;
    
    individualEntrepreneur 'Наличие ИП' (Expert e) = individualEntrepreneur(OVERRIDE lastApprovedRev(e), lastRev(e)) MATERIALIZED IN base;

    EXTEND FORM expert
        PROPERTIES(r) BACKGROUND RGB(212,212,255) IF (individualEntrepreneur(r) OR individualEntrepreneur(prevRev(r))) AND NOT individualEntrepreneur(r) = individualEntrepreneur(prevRev(r))
        READONLYIF readonly(r)
        individualEntrepreneur
    ;

    DESIGN expert {
        extraInfo {
            MOVE PROPERTY(individualEntrepreneur(r));
        }
    }
    EXTEND FORM experts
        PROPERTIES(e) READONLY individualEntrepreneur
    ;

    copy(ExpertRev from, ExpertRev to) +{
        individualEntrepreneur(to) <- individualEntrepreneur(from);
    }
};
};
@defineRevProperty(blackList, 'В черном списке ?', BOOLEAN, extraInfo, 4){
    @defineRevProperty(blackList, 'В черном списке ?', BOOLEAN, extraInfo, 4, base){
    blackList 'В черном списке ?' = DATA BOOLEAN (ExpertRev) CHARWIDTH 4 IN base;
    
    blackList 'В черном списке ?' (Expert e) = blackList(OVERRIDE lastApprovedRev(e), lastRev(e)) MATERIALIZED IN base;

    EXTEND FORM expert
        PROPERTIES(r) BACKGROUND RGB(212,212,255) IF (blackList(r) OR blackList(prevRev(r))) AND NOT blackList(r) = blackList(prevRev(r))
        READONLYIF readonly(r)
        blackList
    ;

    DESIGN expert {
        extraInfo {
            MOVE PROPERTY(blackList(r));
        }
    }
    EXTEND FORM experts
        PROPERTIES(e) READONLY blackList
    ;

    copy(ExpertRev from, ExpertRev to) +{
        blackList(to) <- blackList(from);
    }
};
};
@defineRevProperty(available, 'Готов к найму?', BOOLEAN, extraInfo, 4){
    @defineRevProperty(available, 'Готов к найму?', BOOLEAN, extraInfo, 4, base){
    available 'Готов к найму?' = DATA BOOLEAN (ExpertRev) CHARWIDTH 4 IN base;
    
    available 'Готов к найму?' (Expert e) = available(OVERRIDE lastApprovedRev(e), lastRev(e)) MATERIALIZED IN base;

    EXTEND FORM expert
        PROPERTIES(r) BACKGROUND RGB(212,212,255) IF (available(r) OR available(prevRev(r))) AND NOT available(r) = available(prevRev(r))
        READONLYIF readonly(r)
        available
    ;

    DESIGN expert {
        extraInfo {
            MOVE PROPERTY(available(r));
        }
    }
    EXTEND FORM experts
        PROPERTIES(e) READONLY available
    ;

    copy(ExpertRev from, ExpertRev to) +{
        available(to) <- available(from);
    }
};
};

@defineRevProperty(specialization, 'Специализация', STRING[200], leftPane, 20){
    @defineRevProperty(specialization, 'Специализация', STRING[200], leftPane, 20, base){
    specialization 'Специализация' = DATA STRING[200] (ExpertRev) CHARWIDTH 20 IN base;
    
    specialization 'Специализация' (Expert e) = specialization(OVERRIDE lastApprovedRev(e), lastRev(e)) MATERIALIZED IN base;

    EXTEND FORM expert
        PROPERTIES(r) BACKGROUND RGB(212,212,255) IF (specialization(r) OR specialization(prevRev(r))) AND NOT specialization(r) = specialization(prevRev(r))
        READONLYIF readonly(r)
        specialization
    ;

    DESIGN expert {
        leftPane {
            MOVE PROPERTY(specialization(r));
        }
    }
    EXTEND FORM experts
        PROPERTIES(e) READONLY specialization
    ;

    copy(ExpertRev from, ExpertRev to) +{
        specialization(to) <- specialization(from);
    }
};
};
@defineRevProperty(education, 'Образование', STRING[1500], leftPane, 20){
    @defineRevProperty(education, 'Образование', STRING[1500], leftPane, 20, base){
    education 'Образование' = DATA STRING[1500] (ExpertRev) CHARWIDTH 20 IN base;
    
    education 'Образование' (Expert e) = education(OVERRIDE lastApprovedRev(e), lastRev(e)) MATERIALIZED IN base;

    EXTEND FORM expert
        PROPERTIES(r) BACKGROUND RGB(212,212,255) IF (education(r) OR education(prevRev(r))) AND NOT education(r) = education(prevRev(r))
        READONLYIF readonly(r)
        education
    ;

    DESIGN expert {
        leftPane {
            MOVE PROPERTY(education(r));
        }
    }
    EXTEND FORM experts
        PROPERTIES(e) READONLY education
    ;

    copy(ExpertRev from, ExpertRev to) +{
        education(to) <- education(from);
    }
};
};
@defineRevProperty(certificates, 'Сертификаты', STRING[1500], leftPane, 20){
    @defineRevProperty(certificates, 'Сертификаты', STRING[1500], leftPane, 20, base){
    certificates 'Сертификаты' = DATA STRING[1500] (ExpertRev) CHARWIDTH 20 IN base;
    
    certificates 'Сертификаты' (Expert e) = certificates(OVERRIDE lastApprovedRev(e), lastRev(e)) MATERIALIZED IN base;

    EXTEND FORM expert
        PROPERTIES(r) BACKGROUND RGB(212,212,255) IF (certificates(r) OR certificates(prevRev(r))) AND NOT certificates(r) = certificates(prevRev(r))
        READONLYIF readonly(r)
        certificates
    ;

    DESIGN expert {
        leftPane {
            MOVE PROPERTY(certificates(r));
        }
    }
    EXTEND FORM experts
        PROPERTIES(e) READONLY certificates
    ;

    copy(ExpertRev from, ExpertRev to) +{
        certificates(to) <- certificates(from);
    }
};
};

@defineRevProperty(extraInfo, 'Доп. информация', STRING[1500], leftPane, 20){
    @defineRevProperty(extraInfo, 'Доп. информация', STRING[1500], leftPane, 20, base){
    extraInfo 'Доп. информация' = DATA STRING[1500] (ExpertRev) CHARWIDTH 20 IN base;
    
    extraInfo 'Доп. информация' (Expert e) = extraInfo(OVERRIDE lastApprovedRev(e), lastRev(e)) MATERIALIZED IN base;

    EXTEND FORM expert
        PROPERTIES(r) BACKGROUND RGB(212,212,255) IF (extraInfo(r) OR extraInfo(prevRev(r))) AND NOT extraInfo(r) = extraInfo(prevRev(r))
        READONLYIF readonly(r)
        extraInfo
    ;

    DESIGN expert {
        leftPane {
            MOVE PROPERTY(extraInfo(r));
        }
    }
    EXTEND FORM experts
        PROPERTIES(e) READONLY extraInfo
    ;

    copy(ExpertRev from, ExpertRev to) +{
        extraInfo(to) <- extraInfo(from);
    }
};
};

DESIGN expert {
    leftPane {
        NEW skills {
            horizontal = TRUE;
        }
    }
}

@defineRevProperty(revit, 'Revit', BOOLEAN, skills, 4){
    @defineRevProperty(revit, 'Revit', BOOLEAN, skills, 4, base){
    revit 'Revit' = DATA BOOLEAN (ExpertRev) CHARWIDTH 4 IN base;
    
    revit 'Revit' (Expert e) = revit(OVERRIDE lastApprovedRev(e), lastRev(e)) MATERIALIZED IN base;

    EXTEND FORM expert
        PROPERTIES(r) BACKGROUND RGB(212,212,255) IF (revit(r) OR revit(prevRev(r))) AND NOT revit(r) = revit(prevRev(r))
        READONLYIF readonly(r)
        revit
    ;

    DESIGN expert {
        skills {
            MOVE PROPERTY(revit(r));
        }
    }
    EXTEND FORM experts
        PROPERTIES(e) READONLY revit
    ;

    copy(ExpertRev from, ExpertRev to) +{
        revit(to) <- revit(from);
    }
};
};
@defineRevProperty(civil, 'Civil', BOOLEAN, skills, 4){
    @defineRevProperty(civil, 'Civil', BOOLEAN, skills, 4, base){
    civil 'Civil' = DATA BOOLEAN (ExpertRev) CHARWIDTH 4 IN base;
    
    civil 'Civil' (Expert e) = civil(OVERRIDE lastApprovedRev(e), lastRev(e)) MATERIALIZED IN base;

    EXTEND FORM expert
        PROPERTIES(r) BACKGROUND RGB(212,212,255) IF (civil(r) OR civil(prevRev(r))) AND NOT civil(r) = civil(prevRev(r))
        READONLYIF readonly(r)
        civil
    ;

    DESIGN expert {
        skills {
            MOVE PROPERTY(civil(r));
        }
    }
    EXTEND FORM experts
        PROPERTIES(e) READONLY civil
    ;

    copy(ExpertRev from, ExpertRev to) +{
        civil(to) <- civil(from);
    }
};
};
@defineRevProperty(tekla, 'Tekla', BOOLEAN, skills, 4){
    @defineRevProperty(tekla, 'Tekla', BOOLEAN, skills, 4, base){
    tekla 'Tekla' = DATA BOOLEAN (ExpertRev) CHARWIDTH 4 IN base;
    
    tekla 'Tekla' (Expert e) = tekla(OVERRIDE lastApprovedRev(e), lastRev(e)) MATERIALIZED IN base;

    EXTEND FORM expert
        PROPERTIES(r) BACKGROUND RGB(212,212,255) IF (tekla(r) OR tekla(prevRev(r))) AND NOT tekla(r) = tekla(prevRev(r))
        READONLYIF readonly(r)
        tekla
    ;

    DESIGN expert {
        skills {
            MOVE PROPERTY(tekla(r));
        }
    }
    EXTEND FORM experts
        PROPERTIES(e) READONLY tekla
    ;

    copy(ExpertRev from, ExpertRev to) +{
        tekla(to) <- tekla(from);
    }
};
};
@defineRevProperty(advanceSteel, 'Advance Steel', BOOLEAN, skills, 4){
    @defineRevProperty(advanceSteel, 'Advance Steel', BOOLEAN, skills, 4, base){
    advanceSteel 'Advance Steel' = DATA BOOLEAN (ExpertRev) CHARWIDTH 4 IN base;
    
    advanceSteel 'Advance Steel' (Expert e) = advanceSteel(OVERRIDE lastApprovedRev(e), lastRev(e)) MATERIALIZED IN base;

    EXTEND FORM expert
        PROPERTIES(r) BACKGROUND RGB(212,212,255) IF (advanceSteel(r) OR advanceSteel(prevRev(r))) AND NOT advanceSteel(r) = advanceSteel(prevRev(r))
        READONLYIF readonly(r)
        advanceSteel
    ;

    DESIGN expert {
        skills {
            MOVE PROPERTY(advanceSteel(r));
        }
    }
    EXTEND FORM experts
        PROPERTIES(e) READONLY advanceSteel
    ;

    copy(ExpertRev from, ExpertRev to) +{
        advanceSteel(to) <- advanceSteel(from);
    }
};
};
@defineRevProperty(autoCAD, 'AutoCAD', BOOLEAN, skills, 4){
    @defineRevProperty(autoCAD, 'AutoCAD', BOOLEAN, skills, 4, base){
    autoCAD 'AutoCAD' = DATA BOOLEAN (ExpertRev) CHARWIDTH 4 IN base;
    
    autoCAD 'AutoCAD' (Expert e) = autoCAD(OVERRIDE lastApprovedRev(e), lastRev(e)) MATERIALIZED IN base;

    EXTEND FORM expert
        PROPERTIES(r) BACKGROUND RGB(212,212,255) IF (autoCAD(r) OR autoCAD(prevRev(r))) AND NOT autoCAD(r) = autoCAD(prevRev(r))
        READONLYIF readonly(r)
        autoCAD
    ;

    DESIGN expert {
        skills {
            MOVE PROPERTY(autoCAD(r));
        }
    }
    EXTEND FORM experts
        PROPERTIES(e) READONLY autoCAD
    ;

    copy(ExpertRev from, ExpertRev to) +{
        autoCAD(to) <- autoCAD(from);
    }
};
};

@defineRevProperty(comments, 'Комментарии', TEXT, leftPane, 30){
    @defineRevProperty(comments, 'Комментарии', TEXT, leftPane, 30, base){
    comments 'Комментарии' = DATA TEXT (ExpertRev) CHARWIDTH 30 IN base;
    
    comments 'Комментарии' (Expert e) = comments(OVERRIDE lastApprovedRev(e), lastRev(e)) MATERIALIZED IN base;

    EXTEND FORM expert
        PROPERTIES(r) BACKGROUND RGB(212,212,255) IF (comments(r) OR comments(prevRev(r))) AND NOT comments(r) = comments(prevRev(r))
        READONLYIF readonly(r)
        comments
    ;

    DESIGN expert {
        leftPane {
            MOVE PROPERTY(comments(r));
        }
    }
    EXTEND FORM experts
        PROPERTIES(e) READONLY comments
    ;

    copy(ExpertRev from, ExpertRev to) +{
        comments(to) <- comments(from);
    }
};
};
DESIGN expert {
    PROPERTY(comments(r)) { 
        panelCaptionVertical = TRUE;
        fill = 1;
    }
}
DESIGN experts {
    PROPERTY(comments(e)) { hide = TRUE; }
}

@defineRevProperty(description, 'Описание', RICHTEXT, leftPane, 50){
    @defineRevProperty(description, 'Описание', RICHTEXT, leftPane, 50, base){
    description 'Описание' = DATA RICHTEXT (ExpertRev) CHARWIDTH 50 IN base;
    
    description 'Описание' (Expert e) = description(OVERRIDE lastApprovedRev(e), lastRev(e)) MATERIALIZED IN base;

    EXTEND FORM expert
        PROPERTIES(r) BACKGROUND RGB(212,212,255) IF (description(r) OR description(prevRev(r))) AND NOT description(r) = description(prevRev(r))
        READONLYIF readonly(r)
        description
    ;

    DESIGN expert {
        leftPane {
            MOVE PROPERTY(description(r));
        }
    }
    EXTEND FORM experts
        PROPERTIES(e) READONLY description
    ;

    copy(ExpertRev from, ExpertRev to) +{
        description(to) <- description(from);
    }
};
};
DESIGN expert {
    tabbedPane {
        NEW description {
            caption = badged('Описание', 'Изм' IF (description(r) OR description(prevRev(r))) AND NOT description(r) = description(prevRev(r)));
            MOVE PROPERTY(description(r)) {
                caption = '';
                fill = 1;
            }
        }
    }
}

DESIGN experts {
    PROPERTY(description(e)) { hide = TRUE; }
}
