MODULE ExpertComments;

REQUIRE Expert, Icon, Time;

NAMESPACE Expert;

CLASS ExpertComment 'Комментарий';

expert = DATA Expert (ExpertComment) NONULL DELETE;
countComment (Expert e) = GROUP SUM 1 IF expert(ExpertComment c) = e MATERIALIZED;
lastComment (Expert e) = GROUP LAST ExpertComment c ORDER c BY expert(c) MATERIALIZED;

dateTime 'Date' = DATA DATETIME (ExpertComment);
dateTime(ExpertComment f) <- currentDateTime() WHEN SET(f IS ExpertComment);
date 'Дата' (ExpertComment c) = DATE(dateTime(c));

user = DATA User (ExpertComment);
nameUser 'User' (ExpertComment f) = name(user(f));
user(ExpertComment f) <- currentUser() WHEN SET(f IS ExpertComment);

creationHtml (ExpertComment c) = CONCAT '<br>', '<font size="-2">' + dateTime(c) + '</font>', '<b>' + nameUser(c) + '</b>';
creationInfo (ExpertComment c) = HTML ('<div>' + creationHtml(c) + '</div>');

text 'Текст' = DATA TEXT (ExpertComment);

message 'Текст' (ExpertComment c) = HTML ('<div>' + (CONCAT '<br>', creationHtml(c), escapeXMLValue(text(c))) + '</div>');

textLastComment 'Последний комментарий' (Expert e) = text(lastComment(e));

stringLastComment 'Последний комментарий' (Expert e) = STRING(textLastComment(e));
dateLastComment 'Дата комментарий' (Expert e) = date(lastComment(e));


approved 'Утвержден' = DATA BOOLEAN (ExpertComment);

countNotApprovedComment = GROUP SUM 1 IF ExpertComment c IS ExpertComment AND NOT approved(c) BY expert(c) MATERIALIZED ;
toApprove (Expert e) += TRUE IF countNotApprovedComment(e); 

approve 'Утвердить' (ExpertComment c) {
    approved(c) <- TRUE;
}

EXTEND FORM expert
    OBJECTS c = ExpertComment LAST BACKGROUND RGB(212,212,255) IF NOT approved(c)
    PROPERTIES(c) READONLYIF approved(c) text ON CHANGE {
        INPUT t = text(c) CHANGE DO { 
            IF NOT t THEN DELETE c;
        }
    }
    PROPERTIES(c) 'Добавлен' = creationInfo
    PROPERTIES(c) approve GRID DISABLEIF approved(c)
    PROPERTIES(c) DELETE
    FILTERS expert(c) = e
;

inputComment '' = DATA LOCAL NESTED TEXT ();

newComment 'Добавить' (Expert e) {
    IF inputComment() THEN
        NEW nc = ExpertComment {
            expert(nc) <- e;
            text(nc) <- inputComment();
            inputComment() <- NULL;
        }
}

EXTEND FORM expert
    PROPERTIES inputComment(), newComment(e)
;

DESIGN expert {
    tabbedPane {
        NEW comments {
            caption = badged('Комментарии', countComment(e));
            MOVE BOX(c) {
                GRID(c) {
                    height = 100;
                }
                caption = '';
                PROPERTY(text(c)) {
                    valueHeight = -1;
                }
                PROPERTY(creationInfo(c)) {
                    valueHeight = -1;
                    valueWidth = 20;
                }
            }
            NEW inputComment {
                horizontal = TRUE;
                alignment = STRETCH;
                MOVE PROPERTY(inputComment()) {
                    height = 150;
                    fill = 3;
                }
                MOVE PROPERTY(newComment(e)) {
                    fill = 1;
                } 
            }
        }
    }
}

EXTEND FORM experts
    PROPERTIES(e) READONLY LAST dateLastComment, stringLastComment
    
    OBJECTS ec = ExpertComment
    PROPERTIES(ec) READONLY '' = message
    
    FILTERS expert(ec) = e
;

DESIGN experts {
    pane {
        MOVE BOX(ec) { 
            caption = '';
            fill = 0.2;
            width = 1;
        }
    }
}